{"version":3,"sources":["Header/Header.jsx","App/GenresContext.jsx","MoviesItem/MoviesItem.jsx","voteColor/voteColor.js","MoviesList/MoviesList.jsx","Search/Search.jsx","Api/MovieApi.jsx","App/App.jsx","index.jsx"],"names":["Header","tabClick","className","active","Search","type","onClick","name","Rated","GenresContext","React","createContext","MoviesItem","props","vote","movie","rateMovie","useState","loading","setLoading","id","title","releaseDate","release_date","posterPath","poster_path","overview","rating","voteAverage","vote_average","genre","genre_ids","poster","date","format","Date","spin","allGenres","useContext","genresToShow","map","item","find","elem","cardColor","ratingRender","src","alt","onLoad","style","backgroundColor","count","allowHalf","defaultValue","onChange","value","MoviesList","movieList","submit","defaultProps","debounce","event","target","onLabelChange","onSubmit","preventDefault","placeholder","MovieApi","apiBase","apiKey","getGuestKey","guestKey","localStorage","getItem","fetch","then","res","json","obj","setItem","guest_session_id","method","headers","body","JSON","stringify","getGenres","genres","setPage","num","setCB1","setCB2","pageNo","nextPage","Math","ceil","App","setGenres","error","setError","activeTab","setActiveTab","searchString","setSearchString","searchPage","setSearchPage","activeSearchPage","setActiveSearchPage","movieListFull","setMovieListFull","totalResults","setTotalResults","ratedMoviesFull","setRatedMoviesFull","totalRated","setTotalRated","ratedPage","setRatedPage","activeRatedPage","setActiveRatedPage","isSearchTab","genresList","useEffect","results","total_results","err","page","Error","message","description","filmsToRender","totalToRender","activePage","list","slice","paginator","length","current","total","showSizeChanger","pages","size","Provider","label","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ee902f8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Header.css';\n\nexport default function Header({ tabClick, active }) {\n  Header.propTypes = {\n    tabClick: PropTypes.func.isRequired,\n    active: PropTypes.string.isRequired,\n  };\n\n  const className = { };\n  className[active] = 'chosen';\n\n  return (\n    <div className=\"header\">\n      <div>\n        <button className={className.Search} type=\"button\" onClick={tabClick} name=\"Search\">\n          Search\n        </button>\n      </div>\n      <div>\n        <button className={className.Rated} type=\"button\" onClick={tabClick} name=\"Rated\">\n          Rated\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nconst GenresContext = React.createContext([]);\n\nexport default GenresContext;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Rate, Spin } from 'antd';\nimport { format } from 'date-fns';\n\nimport './MoviesItem.css';\nimport GenresContext from '../App/GenresContext';\nimport voteColor from '../voteColor/voteColor';\n\nfunction MoviesItem(props) {\n  const { movie, rateMovie, active } = props;\n\n  const [loading, setLoading] = useState(true);\n\n  const {\n    id,\n    title,\n    release_date: releaseDate,\n    poster_path: posterPath,\n    overview,\n    rating,\n    vote_average: voteAverage,\n    genre_ids: genre,\n  } = movie;\n\n  const poster = posterPath\n    ? `https://image.tmdb.org/t/p/w200${posterPath}`\n    : 'https://apps.alldbx.de/images/default_person.1d043.png';\n  const date = releaseDate ? format(new Date(releaseDate), 'MMMM dd, yyyy') : 'NA';\n\n  const spin = loading ? <Spin /> : null;\n\n  MoviesItem.propTypes = {\n    movie: PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      release_date: PropTypes.string,\n      poster_path: PropTypes.string,\n      overview: PropTypes.string,\n      rating: PropTypes.number,\n      vote_average: PropTypes.number,\n      genre_ids: PropTypes.arrayOf(PropTypes.number),\n    }).isRequired,\n    rateMovie: PropTypes.func.isRequired,\n    active: PropTypes.string.isRequired,\n  };\n\n  const allGenres = useContext(GenresContext);\n\n  const genresToShow = genre.map((item) => (\n    <span className=\"genre\" key={item}>\n      {allGenres.find((elem) => elem.id === item).name}\n    </span>\n  ));\n\n  const cardColor = voteColor(voteAverage);\n\n  const ratingRender = active === 'Rated' ? rating : voteAverage;\n\n  return (\n    <div className=\"card\">\n      <div className=\"cardTop\">\n        <div className=\"moviePoster\">\n          {spin}\n          <img src={poster} alt=\"poster\" onLoad={() => setLoading(false)} />\n        </div>\n        <div className=\"movieInfo\">\n          <div className=\"movieTitle\">\n            <span>{title}</span>\n            <div className=\"movieRating\" style={{ backgroundColor: `${cardColor}` }}>\n              <p>{ratingRender}</p>\n            </div>\n          </div>\n          <div className=\"date\">\n            <span>{date}</span>\n          </div>\n          <div className=\"movieGenres\">{genresToShow}</div>\n          <div className=\"highRes\">\n            <div className=\"movieSinops\">\n              <span>{overview}</span>\n            </div>\n            <div className=\"stars\">\n              <Rate count={10} allowHalf defaultValue={ratingRender} onChange={(value) => rateMovie(value, id)} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"lowRes\">\n        <div className=\"movieSinops\">\n          <span>{overview}</span>\n        </div>\n        <div className=\"stars\">\n          <Rate count={10} allowHalf defaultValue={ratingRender} onChange={(value) => rateMovie(value, id)} />\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default MoviesItem;\n","export default function voteColor(vote) {\r\n  if (vote <= 3) return \"#E90000\";\r\n  if (vote <= 5) return \"#E97E00\";\r\n  if (vote <= 7) return \"#E9D100\";\r\n  return \"#66E900\";\r\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MoviesItem from '../MoviesItem/MoviesItem';\n\nimport './MoviesList.css';\n\nfunction MoviesList(props) {\n  const { movieList, rateMovie, active } = props;\n\n  MoviesList.propTypes = {\n    movieList: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        release_date: PropTypes.string,\n        poster_path: PropTypes.string,\n        overview: PropTypes.string,\n        vote_average: PropTypes.number,\n        genre_ids: PropTypes.arrayOf(PropTypes.number),\n      })\n    ).isRequired,\n    rateMovie: PropTypes.func.isRequired,\n    active: PropTypes.string.isRequired,\n  };\n\n  return (\n    <div className=\"movieslist\">\n      {movieList.map((movie) => (\n        <MoviesItem key={movie.id} movie={movie} rateMovie={rateMovie} active={active} />\n      ))}\n    </div>\n  );\n}\n\nexport default MoviesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from 'antd';\nimport { debounce } from 'lodash';\n\nfunction Search(props) {\n  const { submit } = props;\n\n  Search.propTypes = {\n    submit: PropTypes.func\n  };\n\n  Search.defaultProps = {\n    submit: () => {\n    }\n  };\n\n  const onLabelChange = (event) => {\n    const { value } = event.target;\n    if (value) submit(value);\n  };\n\n  return (\n    <form onChange={debounce((event) => onLabelChange(event), 1000)} onSubmit={(event) => event.preventDefault()}>\n      <Input placeholder=\"Type to search\" />\n    </form>\n  );\n}\n\n\nexport default Search;\n","export default class MovieApi {\r\n\r\n  apiBase = 'https://api.themoviedb.org/3/';\r\n\r\n  apiKey = '382c03696044ec7006f5212f1c181827';\r\n\r\n  getGuestKey = () => {\r\n    let guestKey = (localStorage.getItem(\"guestKey\"));\r\n    if (!guestKey) {\r\n      fetch(`${(this.apiBase)}authentication/guest_session/new?api_key=${this.apiKey}`)\r\n        .then((res) => res.json())\r\n        .then((obj) => {\r\n          localStorage.setItem(\"guestKey\", obj.guest_session_id);\r\n          guestKey = localStorage.getItem(\"guestKey\");\r\n        });\r\n    }\r\n    return guestKey;\r\n  }\r\n\r\n  rateMovie = (value, id) => {\r\n    const guestKey = this.getGuestKey();\r\n    fetch(`${this.apiBase}movie/${id}/rating?api_key=${this.apiKey}&guest_session_id=${guestKey}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\"\r\n      },\r\n      body: JSON.stringify({\r\n        value\r\n      })\r\n    });\r\n  }\r\n\r\n  getGenres = () => fetch(`${this.apiBase}genre/movie/list?api_key=${this.apiKey}&language=en-US`)\r\n      .then((res) => res.json())\r\n      .then((obj) => obj.genres);\r\n\r\n  setPage = (num, setCB1, setCB2, pageNo) => {\r\n    const nextPage = Math.ceil(num / 2);\r\n    if (Math.ceil(pageNo / 2) === nextPage) {\r\n      setCB1(num);\r\n      return;\r\n    }\r\n    setCB2(nextPage);\r\n    setCB1(num);\r\n  }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport { Pagination, Alert, Spin } from 'antd';\n\nimport Header from '../Header/Header';\nimport MoviesList from '../MoviesList/MoviesList';\nimport Search from '../Search/Search';\nimport GenresContext from './GenresContext';\n\nimport MovieApi from \"../Api/MovieApi\";\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction App() {\n\n  const { getGuestKey, getGenres, rateMovie, setPage } = new MovieApi();\n\n  const [genres, setGenres] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [activeTab, setActiveTab] = useState('Search');\n\n  const [searchString, setSearchString] = useState('');\n  const [searchPage, setSearchPage] = useState(1);\n  const [activeSearchPage, setActiveSearchPage] = useState(1);\n  const [movieListFull, setMovieListFull] = useState([]);\n  const [totalResults, setTotalResults] = useState(null);\n\n  const [ratedMoviesFull, setRatedMoviesFull] = useState([]);\n  const [totalRated, setTotalRated] = useState(null);\n  const [ratedPage, setRatedPage] = useState(1);\n  const [activeRatedPage, setActiveRatedPage] = useState(1);\n\n  const apiBase = 'https://api.themoviedb.org/3/';\n  const apiKey = '382c03696044ec7006f5212f1c181827';\n  const guestKey = getGuestKey();\n  const isSearchTab = activeTab === \"Search\";\n\n  if (!genres) getGenres().then(genresList => setGenres(genresList));\n\n  useEffect(() => {\n    if (isSearchTab) {\n      if (searchString) {\n        try {\n          fetch(\n            `${apiBase}search/movie?api_key=${apiKey}&language=en-US&query=${searchString}&page=${searchPage}&include_adult=false`\n          )\n            .then((res) => res.json())\n            .then((body) => {\n              setMovieListFull(body.results);\n              setTotalResults(body.total_results);\n              setLoading(false);\n            });\n        } catch (err) {\n          setError(true);\n        }\n      }\n    } else {\n      setLoading(true);\n      try {\n        fetch(`${apiBase}guest_session/${guestKey}/rated/movies?api_key=${apiKey}&page=${ratedPage}&language=en-US&sort_by=created_at.asc}`)\n          .then((res) => res.json())\n          .then((obj) => {\n            setRatedPage(obj.page);\n            setTotalRated(obj.total_results);\n            setRatedMoviesFull(obj.results);\n            setLoading(false);\n          });\n      } catch (err) {\n        setLoading(false);\n        setError(true);\n      }\n    }\n  }, [isSearchTab, searchString, activeSearchPage, searchPage, ratedPage, guestKey]);\n\n  const tabClick = (event) => setActiveTab(event.target.name);\n\n  const pageClick = (num) => isSearchTab ?\n    setPage(num, setActiveSearchPage, setSearchPage, activeSearchPage) :\n    setPage(num, setActiveRatedPage, setRatedPage, activeRatedPage);\n\n  const onSubmit = (label) => {\n    setSearchString(label);\n    setError(false);\n    setLoading(true);\n    setSearchPage(1);\n    setActiveSearchPage(1);\n  };\n\n  const Error = (\n    <Alert\n      className=\"alert\"\n      message=\"Error Text\"\n      description=\"Something goes wrong! But truth is out there...\"\n      type=\"error\"\n    />\n  );\n\n  const {filmsToRender, totalToRender, activePage} = isSearchTab ?\n    { filmsToRender: movieListFull, totalToRender: totalResults, activePage: activeSearchPage } :\n    { filmsToRender: ratedMoviesFull, totalToRender: totalRated, activePage: activeRatedPage};\n\n  const list = activePage % 2 === 0 ? [...filmsToRender.slice(10)] : [...filmsToRender.slice(0, 10)];\n\n  const paginator = filmsToRender.length ? (\n    <Pagination current={activePage} total={totalToRender} onChange={pageClick} showSizeChanger={false} />\n  ) : null;\n\n  const pages = loading ? (\n    <div className=\"spin\">\n      <Spin size=\"large\" />\n    </div>\n  ) : (\n    <div>\n      <GenresContext.Provider value={genres}>\n        <MoviesList movieList={list} rateMovie={rateMovie} active={activeTab} />\n      </GenresContext.Provider>\n      <div className=\"paginator\">{paginator}</div>\n    </div>\n  );\n\n  return (\n    <div className=\"wrapper\">\n      <Header tabClick={tabClick} active={activeTab} />\n      {isSearchTab ? <Search submit={onSubmit} /> : null}\n      {error ? Error : pages}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}