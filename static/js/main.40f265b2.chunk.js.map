{"version":3,"sources":["App/getGenres.js","Header/Header.jsx","MoviesItem/MoviesItem.jsx","MoviesList/MoviesList.jsx","Search/Search.jsx","App/App.jsx","index.jsx"],"names":["getGenres","id","name","Header","className","MoviesItem","props","movie","useState","loading","setLoading","title","releaseDate","release_date","posterPath","poster_path","overview","voteAverage","vote_average","genre","genre_ids","poster","date","format","Date","spin","allGenres","genresToShow","map","item","find","elem","src","alt","onLoad","count","allowHalf","defaultValue","MoviesList","movieList","Search","submit","defaultProps","onChange","debounce","event","value","target","onLabelChange","onSubmit","preventDefault","placeholder","App","searchString","setSearchString","searchPage","setSearchPage","activePage","setActivePage","movieListFull","setMovieListFull","totalResults","setTotalResults","error","setError","useEffect","fetch","then","res","json","body","results","total_results","err","list","slice","genres","showError","message","description","type","pages","size","current","total","num","nextPage","Math","ceil","showSizeChanger","label","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40f265b2.chunk.js","sourcesContent":["\r\nfunction getGenres() {\r\n  return [\r\n    {id: 28, name: \"Action\"},\r\n    {id: 12, name: \"Adventure\"},\r\n    {id: 16, name: \"Animation\"},\r\n    {id: 35, name: \"Comedy\"},\r\n    {id: 80, name: \"Crime\"},\r\n    {id: 99, name: \"Documentary\"},\r\n    {id: 18, name: \"Drama\"},\r\n    {id: 10751, name: \"Family\"},\r\n    {id: 14, name: \"Fantasy\"},\r\n    {id: 36, name: \"History\"},\r\n    {id: 27, name: \"Horror\"},\r\n    {id: 10402, name: \"Music\"},\r\n    {id: 9648, name: \"Mystery\"},\r\n    {id: 10749, name: \"Romance\"},\r\n    {id: 878, name: \"Science Fiction\"},\r\n    {id: 10770, name: \"TV Movie\"},\r\n    {id: 53, name: \"Thriller\"},\r\n    {id: 10752, name: \"War\"},\r\n    {id: 37, name: \"Western\"}\r\n  ]\r\n}\r\n\r\nexport default getGenres;\r\n","import React from 'react';\n\nimport './Header.css';\n\nconst Header = () => (\n  <div className=\"header\">\n    <div className=\"chosen\">\n      <span>Search</span>\n    </div>\n    <div>\n      <span>Rated</span>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Rate, Spin } from 'antd';\nimport { format } from 'date-fns';\n\nimport './MoviesItem.css';\n\nfunction MoviesItem(props) {\n  const { movie } = props;\n\n  const [loading, setLoading] = useState(true);\n\n  const {\n    title,\n    release_date: releaseDate,\n    poster_path: posterPath,\n    overview,\n    vote_average: voteAverage,\n    genre_ids: genre,\n  } = movie;\n  const poster = posterPath\n    ? `https://image.tmdb.org/t/p/w200${posterPath}`\n    : 'https://apps.alldbx.de/images/default_person.1d043.png';\n  const date = releaseDate ? format(new Date(releaseDate), 'MMMM dd, yyyy') : 'NA';\n\n  const spin = loading ? <Spin /> : null;\n\n  MoviesItem.propTypes = {\n    movie: PropTypes.shape({\n      title: PropTypes.string,\n      release_date: PropTypes.string,\n      poster_path: PropTypes.string,\n      overview: PropTypes.string,\n      vote_average: PropTypes.number,\n      genre_ids: PropTypes.arrayOf(PropTypes.number),\n    }).isRequired,\n  };\n\n  const allGenres = [\n    { id: 28, name: 'Action' },\n    { id: 12, name: 'Adventure' },\n    { id: 16, name: 'Animation' },\n    { id: 35, name: 'Comedy' },\n    { id: 80, name: 'Crime' },\n    { id: 99, name: 'Documentary' },\n    { id: 18, name: 'Drama' },\n    { id: 10751, name: 'Family' },\n    { id: 14, name: 'Fantasy' },\n    { id: 36, name: 'History' },\n    { id: 27, name: 'Horror' },\n    { id: 10402, name: 'Music' },\n    { id: 9648, name: 'Mystery' },\n    { id: 10749, name: 'Romance' },\n    { id: 878, name: 'Science Fiction' },\n    { id: 10770, name: 'TV Movie' },\n    { id: 53, name: 'Thriller' },\n    { id: 10752, name: 'War' },\n    { id: 37, name: 'Western' },\n  ];\n  const genresToShow = genre.map((item) => (\n    <span className=\"genre\" key={item}>\n      {allGenres.find((elem) => elem.id === item).name}\n    </span>\n  ));\n\n  return (\n    <div className=\"card\">\n      <div className=\"moviePoster\">\n        {spin}\n        <img src={poster} alt=\"poster\" onLoad={() => setLoading(false)} />\n      </div>\n      <div className=\"movieInfo\">\n        <div className=\"movieTitle\">\n          <span>{title}</span>\n          <div className=\"movieRating\">\n            <p>{voteAverage}</p>\n          </div>\n        </div>\n        <div className=\"date\">\n          <span>{date}</span>\n        </div>\n        <div className=\"movieGenres\">{genresToShow}</div>\n        <div className=\"movieSinops\">\n          <span>{overview}</span>\n        </div>\n        <div className=\"stars\">\n          <Rate count={10} allowHalf defaultValue={voteAverage} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MoviesItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MoviesItem from '../MoviesItem/MoviesItem';\n\nimport './MoviesList.css';\n\nfunction MoviesList(props) {\n  const { movieList } = props;\n\n  MoviesList.propTypes = {\n    movieList: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        release_date: PropTypes.string,\n        poster_path: PropTypes.string,\n        overview: PropTypes.string,\n        vote_average: PropTypes.number,\n        genre_ids: PropTypes.arrayOf(PropTypes.number),\n      })\n    ).isRequired,\n  };\n\n  return (\n    <div className=\"movieslist\">\n      {movieList.map((movie) => (\n        <MoviesItem key={movie.id} movie={movie} />\n      ))}\n    </div>\n  );\n}\n\nexport default MoviesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from 'antd';\nimport { debounce } from 'lodash';\n\nfunction Search(props) {\n  const { submit } = props;\n\n  Search.propTypes = {\n    submit: PropTypes.func,\n  };\n\n  Search.defaultProps = {\n    submit: () => {},\n  };\n\n  const onLabelChange = (event) => {\n    const { value } = event.target;\n    if (value) submit(value);\n  };\n\n  return (\n    <form onChange={debounce((event) => onLabelChange(event), 1000)} onSubmit={(event) => event.preventDefault()}>\n      <Input placeholder=\"Type to search\" />\n    </form>\n  );\n}\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport { Pagination, Alert, Spin } from 'antd';\nimport getGenres from './getGenres';\n\nimport Header from '../Header/Header';\nimport MoviesList from '../MoviesList/MoviesList';\nimport Search from '../Search/Search';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction App() {\n  const [searchString, setSearchString] = useState('');\n  const [searchPage, setSearchPage] = useState(1);\n  const [activePage, setActivePage] = useState(1);\n  const [movieListFull, setMovieListFull] = useState([]);\n  const [totalResults, setTotalResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const apiBase = 'https://api.themoviedb.org/3/';\n  const apiKey = '382c03696044ec7006f5212f1c181827';\n\n  const onError = () => {\n    setError(true);\n  };\n\n  const onSubmit = (label) => {\n    setSearchString(label);\n    setError(false);\n    setLoading(true);\n    setSearchPage(1);\n    setActivePage(1);\n  };\n\n  const pageClick = (num) => {\n    const nextPage = Math.ceil(num / 2);\n\n    if (Math.ceil(activePage / 2) === nextPage) {\n      setActivePage(num);\n      return;\n    }\n    setSearchPage(nextPage);\n    setActivePage(num);\n  };\n\n  useEffect(() => {\n    if (searchString) {\n      try {\n        fetch(\n          `${apiBase}search/movie?api_key=${apiKey}&language=en-US&query=${searchString}&page=${searchPage}&include_adult=false`\n        )\n          .then((res) => res.json())\n          .then((body) => {\n            setMovieListFull([...body.results]);\n            setTotalResults(body.total_results);\n            setLoading(false);\n          });\n      } catch (err) {\n        onError();\n      }\n    }\n  }, [searchString, activePage, searchPage]);\n\n  const list = activePage % 2 === 0 ? [...movieListFull.slice(10)] : [...movieListFull.slice(0, 10)];\n  const genres = getGenres();\n\n  const showError = (\n    <Alert\n      className=\"alert\"\n      message=\"Error Text\"\n      description=\"Something goes wrong! But truth is out there...\"\n      type=\"error\"\n    />\n  );\n\n  const pages = loading ? (\n    <div className=\"spin\">\n      <Spin size=\"large\" />\n    </div>\n  ) : (\n    <div>\n      <MoviesList movieList={list} genres={genres} />\n      <div className=\"paginator\">\n        <Pagination current={activePage} total={totalResults} onChange={pageClick} showSizeChanger={false} />\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Search submit={onSubmit} />\n      {error ? showError : pages}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}